version: '3.5'
networks:
  catalogue_net:
volumes:
    postgres-data:
services:
  db:
    image: postgres:10.5
    environment:
        - POSTGRES_USER=${POSTGRES_USER}
        - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
        - POSTGRES_DB=${POSTGRES_DB}
    networks:
        - catalogue_net
    ports: 
        - '5435:5432'
    volumes:
        - postgres-data:/var/lib/postgresql/data
  api:
    build: 
        context: ./
    depends_on:
        - db
    networks:
        - catalogue_net
    ports:
        - ${API_PORT}:${API_PORT}
    environment:
        - API_PORT=${API_PORT}
        - POSTGRES_HOST=${POSTGRES_HOST}
        - POSTGRES_PORT=${POSTGRES_PORT}
        - POSTGRES_USER=${POSTGRES_USER}
        - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
        - POSTGRES_DB=${POSTGRES_DB}
    volumes:
        - ./api:/catalogue/api
    command: ["api", "serve"] 
  dd-agent:
    image: gcr.io/datadoghq/agent:7
    networks:
        - catalogue_net
    volumes:
        - /var/run/docker.sock:/var/run/docker.sock:ro
        - /proc/:/host/proc/:ro
        - /sys/fs/cgroup/:/host/sys/fs/cgroup:ro
    environment: 
        - DD_API_KEY={{DD_API_KEY}}
        - DD_SITE=datadoghq.com
        - DD_APM_ENABLED=true 
        - DD_APM_NON_LOCAL_TRAFFIC=true
        - DD_DOGSTATSD_NON_LOCAL_TRAFFIC=true
    ports: 
        - '8126:8126'
          
